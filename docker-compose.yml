services:
  db:
    restart: always
    volumes:
      - /volumes/db/data:/var/lib/postgresql/data:rw
    privileged: true
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}

    build: ./db
    ports:
      - ${DB_EXPOSE_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
    build: ./backend
    volumes:
      - ./backend:/server
    depends_on:
      db:
        condition: service_healthy
    command: python /server/manage.py runserver 0.0.0.0:8000
    ports:
      - "3000:8000"
      - "3001:3001"
  client:
    restart: always
    network_mode: host
    build: ./client
    ports:
      - "3002:80"
      - "3003:443"
